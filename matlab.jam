import os ;
import project ;
import common ;
import path ;
import errors ;

project.initialize $(__name__) ;
project matlab ;

# Save the project so that we tolerate 'import + using' combo.
.project = [ project.current ] ;

# Helper utils for easy debug output
if [ MATCH (--debug-configuration) : [ modules.peek : ARGV ] ]
{
  .debug-configuration = TRUE ;
}

rule init ( version ? : command * : options * )
{
  project.push-current $(.project) ;

  command = [ common.get-invocation-command matlab : matlab : $(command) ] ;

  if $(command)
  {
    local output-lines = [ SPLIT_BY_CHARACTERS [ SHELL "\"$(command)\" -n" ] : "\n" ] ;

    local detected-version-components = [ MATCH "(R[0-9][0-9][0-9][0-9][a-z])" : $(output-lines) ] ;
    local detected-version = $(detected-version-components[1]) ;

    if ! $(detected-version)
    {
      errors.warning "MATLAB not detected at" $(command) ;
    }

    if $(version)
    {
      if $(detected-version) != $(version)
      {
        errors.user-error "detected version of MATLAB (" $(detected-version) ") does not match desired (" $(version) ")" ;
      }
    }

    if $(detected-version)
    {
      version = $(detected-version) ;
    }

    local output-lines = [ SPLIT_BY_CHARACTERS [ SHELL "\"$(command)\" -n" ] : "\n" ] ;

    local matlab-root-components = [ MATCH "MATLAB += +(.+)" : $(output-lines) ] ;
    local matlab-arch-components = [ MATCH "ARCH += +(.+)" : $(output-lines) ] ;

    local matlab-root = $(matlab-root-components[1]) ;
    local matlab-arch = $(matlab-arch-components[1]) ;
    local matlab-lib = [ path.join $(matlab-root) bin $(matlab-arch) ] ;
    local matlab-include = [ path.join $(matlab-root) extern include ] ;

    if $(.debug-configuration) = TRUE
    {
      echo "notice: using MATLAB $(version) at $(matlab-root) " ;
    }

    alias matlab
    : # sources
    eng
    mex
    mat
    mx
    ;

    lib eng
    : # sources
    : # requirements
    <name>eng
    <search>$(matlab-lib)
    : # default-build
    : # usage-requirements
    <include>$(matlab-include)
    ;

    lib mex
    : # sources
    : # requirements
    <name>mex
    <search>$(matlab-lib)
    : # default-build
    : # usage-requirements
    <include>$(matlab-include)
    ;

    lib mat
    : # sources
    : # requirements
    <name>mat
    <search>$(matlab-lib)
    : # default-build
    : # usage-requirements
    <include>$(matlab-include)
    ;

    lib mx
    : # sources
    : # requirements
    <name>mx
    <search>$(matlab-lib)
    : # default-build
    : # usage-requirements
    <include>$(matlab-include)
    ;

    .matlab-root = $(matlab-root) ;
    .matlab-bin = [ path.join [ common.get-absolute-tool-path $(command) ] matlab ] ;
  }
  else
  {
    errors.warning "MATLAB not found" ;
  }

  project.pop-current ;
}

rule root ( )
{
  return $(.matlab-root) ;
}

rule executable ( )
{
  return $(.matlab-bin) ;
}
